/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DecksIndexRouteImport } from './routes/decks/index'
import { Route as DecksSearchRouteImport } from './routes/decks/search'
import { Route as DecksDeckIdRouteImport } from './routes/decks/$deckId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DecksIndexRoute = DecksIndexRouteImport.update({
  id: '/decks/',
  path: '/decks/',
  getParentRoute: () => rootRouteImport,
} as any)
const DecksSearchRoute = DecksSearchRouteImport.update({
  id: '/decks/search',
  path: '/decks/search',
  getParentRoute: () => rootRouteImport,
} as any)
const DecksDeckIdRoute = DecksDeckIdRouteImport.update({
  id: '/decks/$deckId',
  path: '/decks/$deckId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/decks/$deckId': typeof DecksDeckIdRoute
  '/decks/search': typeof DecksSearchRoute
  '/decks': typeof DecksIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/decks/$deckId': typeof DecksDeckIdRoute
  '/decks/search': typeof DecksSearchRoute
  '/decks': typeof DecksIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/decks/$deckId': typeof DecksDeckIdRoute
  '/decks/search': typeof DecksSearchRoute
  '/decks/': typeof DecksIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/decks/$deckId' | '/decks/search' | '/decks'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/decks/$deckId' | '/decks/search' | '/decks'
  id: '__root__' | '/' | '/decks/$deckId' | '/decks/search' | '/decks/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DecksDeckIdRoute: typeof DecksDeckIdRoute
  DecksSearchRoute: typeof DecksSearchRoute
  DecksIndexRoute: typeof DecksIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/decks/': {
      id: '/decks/'
      path: '/decks'
      fullPath: '/decks'
      preLoaderRoute: typeof DecksIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/decks/search': {
      id: '/decks/search'
      path: '/decks/search'
      fullPath: '/decks/search'
      preLoaderRoute: typeof DecksSearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/decks/$deckId': {
      id: '/decks/$deckId'
      path: '/decks/$deckId'
      fullPath: '/decks/$deckId'
      preLoaderRoute: typeof DecksDeckIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DecksDeckIdRoute: DecksDeckIdRoute,
  DecksSearchRoute: DecksSearchRoute,
  DecksIndexRoute: DecksIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
